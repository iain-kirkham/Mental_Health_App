package dev.iainkirkham.mental_planner_backend.mood;


import jakarta.persistence.*;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotNull;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import org.hibernate.annotations.JdbcTypeCode;
import org.hibernate.type.SqlTypes;

import java.time.Instant;
import java.util.List;

/**
 * This entity represents a mood entry recorded by the user.
 * The entity maps to the "mood_entry" table in the postgresDB.
 */
@Entity
@Table(name = "mood_entry")
@Getter
@Setter
@ToString
@NoArgsConstructor
public class MoodEntry {

    /**
     * This is the unique identifier of the mood entry, it is both the primary key and is auto-generated by the database
     * on insertion of a new entry.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The mood score from ranging from 1 (very bad) to 5 (very good)
     */
    @Min(1)
    @Max(5)
    @NotNull
    @Column(nullable = false)
    private Short moodScore;

    /**
     * The date and time of when the mood entry was recorded.
     * The time is provided in UTC.
     */
    @NotNull
    @Column(nullable = false)
    private Instant dateTime;

    /**
     * List of factors contributing to the user's mood.
     * Each string in the list corresponds to a specific factor such as sleep or work.
     * This field is stored in the Database as a JSON array, allowing for multiple factors.
     */
    @JdbcTypeCode(SqlTypes.JSON)
    @Column(name = "factors")
    private List<String> factors;

    /**
     * Optional notes about the mood entry.
     * Stored as text in the database to allow user to record long descriptions if required.
     */
    @Column(columnDefinition = "TEXT")
    private String notes;
}
